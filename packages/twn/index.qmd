---
title: "twn - de TWN-lijst voor R "
#author: "Johan van Tent"
#date: "2022-10-20"
categories: [R-packages, CRAN]
image: twn_hex.png
description: "Taxa Waterbeheer Nederland (TWN)<br><br> *twn* heeft diverse functies die het gemakkelijk maken om de TWN-lijst te gebruiken bij de analyse van ecologische data in R."
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```


# twn - TWN-lijst voor R

Het doel van *twn* is tweeledig. Ten eerste maakt *twn* het eenvoudig om de TWN-lijst in R te kunnen raadplegen en gebruiken. Ten tweede heeft *twn* diverse functies die het gemakkelijk maken om de TWN-lijst te gebruiken bij de analyse van ecologische data.

De website voor *twn* is te vinden op [https://redtent.github.io/twn/](https://redtent.github.io/twn/)


## Installatie

'twn' is te installeren vanaf CRAN. 

``` r
install.packages("twn")
```

De ontwikkelversie is te installeren van [GitHub](https://github.com/Redtent/twn) met:

``` r
# install.packages("devtools")
devtools::install_github("RedTent/twn")
```

## TWN lijst

*twn* bevat de complete TWN-lijst (`twn_lijst`). De datum van de TWN-lijst wordt getoond bij het laden van de package. 

```{r}
library(twn)

dplyr::glimpse(twn_lijst)

attr(twn_lijst, "datum_twn_lijst")
```

## TWN informatie opzoeken

De `twn_lijst` bevat de complete TWN-lijst. De twn_info-functies (`twn_*`) maken het makkelijk om informatie uit de TWN-lijst op te zoeken op basis van de taxonnaam.

```{r twn-info}
twn_status(c("Bufo calamita", "Bufo bufo"))

twn_voorkeurnaam(c("Bufo calamita", "Bufo bufo"))

twn_parent(c("Bufo calamita", "Bufo bufo"))

twn_localname(c("Bufo calamita", "Bufo bufo"))

twn_taxonlevel(c("Bufo calamita", "Bufo bufo"))

twn_taxontype(c("Bufo calamita", "Bufo bufo"))

# taxonlevels zijn een geordende factor. Zo is het makkelijk om 
# alles boven of onder een bepaald taxonomisch niveau te filteren.
```

## TWN controle

De functies `is_twn` en `is_valid_twn` kunnen gebruikt worden om te controleren of taxa voorkomen in de TWN-lijst. Ook kan worden gecheckt of ze een geldige statuscode hebben.

```{r is-twn}
taxa <- c("Bufo calamita", "Bufo bufo", "Bufo", "Ezel", NA)

is_twn(taxa)

# Een taxon uit de TWN met status 91 (TWN error do not use)
invalid <- "Abies veitchii 1861"

is_twn(invalid)
is_valid_twn(invalid)


```

Naast de controle is het mogelijk om te controleren op verschillende eigenschappen van elk taxon zoals het taxontype, het taxonlevel en de status.

```{r is-taxon-attribuut}
is_taxontype(c("Bufo bufo", "Abies"), "Amphibia")
is_taxonlevel(c("Bufo bufo", "Bufo"), "Species")
is_status(c("Bufo bufo", "Bufo calamita"), "10")
```


## Hogere taxonlevels

In sommige gevallen is het handig om soorten te aggregeren naar hogere taxonlevels. *twn* heeft twee functies die hierbij kunnen helpen: `increase_taxonlevel` aggregeert naar een gespecificeerd niveau, `match_parent` aggreggeert o.b.v. een referentielijst. Deze laatste functie is nuttig om soortenlijsten te kunnen matchen. Dit is handig bij het gebruik van ecologische maatlatten en autecologische data.

```{r increase-taxonlevels}
taxa <- c("Bufo calamita", "Bufo bufo", "Bufo", "Ezel", NA)
referentie_taxa <- c("Bufonidae", "Epidalea")

increase_taxonlevel(taxa, "Familia")

match_parent(taxa = taxa, ref_taxa = referentie_taxa)

```

## Onderliggende taxa

Soms kan het handig zijn om eeen overzicht te maken van de taxa die onder een bepaald 'parent'taxon aanwezig zijn. Dit kan worden gedaan met de functie `twn_children`.

```{r children}
# Welke taxa vallen er onder de familie van de kranswieren (Characeae)?
twn_children("Characeae")

```

## Lees meer

In de vignette *twn als hulp bij KRW-beoordeling* kun je meer lezen over hoe je *twn* in de praktijk kunt gebruiken. Gebruik hiervoor `vignette("krw_beoordeling")`.

